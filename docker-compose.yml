version: '3.8'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
        test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
        interval: 10s
        timeout: 5s
        retries: 5

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'  # Boş şifre kullanımına izin ver
      MYSQL_DATABASE: library_db
    ports:
      - '3307:3306'
    volumes:
      - mysql-data:/var/lib/mysql


  book-service:
    build:
      context: ./book_service
    container_name: book-service
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_started
    ports:
      - '8000:8000'
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      SQLALCHEMY_DATABASE_URL: "mysql+pymysql://root:@mysql:3306/library_db"




  loan-service:
    build:
      context: ./loan_service  
    container_name: loan-service
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_started
    ports:
      - '8001:8001'  
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      SQLALCHEMY_DATABASE_URL: "mysql+pymysql://root:@mysql:3306/library_db"

  user-service:
    build:
      context: ./user_service  # User service'in dosya yolu
    container_name: user-service
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_started
    ports:
      - '8003:8003'  # User Service portu
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      SQLALCHEMY_DATABASE_URL: "mysql+pymysql://root:@mysql:3306/library_db"





volumes:
  mysql-data:



  # book_service:
  #   build: ./book_service
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - kafka

  #   command: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8001 & python app/consumer.py"]


  # user_service:
  #   build: ./user_service
  #   ports:
  #     - "8002:8002"
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_BROKER_URL: kafka:9092
  #   command: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8002 & python app/consumer.py"]

  # loan_service:
  #   build: ./loan_service
  #   ports:
  #     - "8003:8003"
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_BROKER_URL: kafka:9092
  #   command: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8003 & python app/consumer.py"]

  # inventory_service:
  #   build: ./inventory_service
  #   ports:
  #     - "8004:8004"
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_BROKER_URL: kafka:9092
  #   command: ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port 8004 & python app/consumer.py"]
